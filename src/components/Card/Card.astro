---
import { Image } from "astro:assets";
import CircleCheck from "../Icons/CircleCheck.astro";
interface Props {
  title: string;
  modalBody: string;
  href: string;
  bullets?: string[];
  imageSrc: string;
}

const { href, title, modalBody: body, bullets, imageSrc } = Astro.props;
---

<div class="w-full">
  <div class="bg-white rounded-lg overflow-hidden relative">
    <div class="flex justify-center items-center h-auto">
      <div class="w-38 h-38 overflow-hidden inline-block">
        <Image
          src={imageSrc}
          width={250}
          height={250}
          alt="Circle Image"
          class="w-full h-full object-cover"
        />
      </div>
    </div>
    <div class="px-6 py-4 text-center">
      <div class="font-bold text-xl mb-2 relative">
        {title}
      </div>
      <div class="left-1/4 w-2/3 h-0.5 bg-paletteColor2 mx-auto"></div>
      {
        bullets ? (
          <ul class="text-gray-700 text-base py-3 list-inside text-left list-none">
            {bullets.map((bullet) => (
              <li class="flex items-center">
                <div class="pr-4">
                  <CircleCheck
                    width={"18"}
                    height={"18"}
                    fill="paletteColor3"
                  />
                </div>

                {bullet}
              </li>
            ))}
          </ul>
        ) : (
          <p class="text-gray-700 text-base py-3">{body}</p>
        )
      }
    </div>
    <div class="px-6 py-4 bg-paletteColor1 text-center">
      <button
        class="text-white font-bold hover:text-paletteColor2 duration-300"
        onclick={`document.getElementById('modal').classList.add('block'); document.getElementById('modal').classList.remove('hidden'); document.getElementById('modal-title').textContent = '${title}'; document.getElementById('modal-body').textContent = '${body}';`}
      >
        Learn More <span class="text-paletteColor2">&rarr;</span>
      </button>
    </div>
  </div>
</div>

<div id="modal" class="fixed z-10 inset-0 overflow-y-auto hidden">
  <div
    class="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0"
  >
    <div class="fixed inset-0 transition-opacity">
      <div class="absolute inset-0 bg-blue-200 opacity-75"></div>
    </div>
    <span class="hidden sm:inline-block sm:align-middle sm:h-screen"
    ></span>&#8203;
    <div
      class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full animate-modal"
    >
      <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
          <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
            <h3
              id="modal-title"
              class="text-lg leading-6 font-medium text-gray-900"
            >
              Modal Title
            </h3>
            <div class="mt-2">
              <p id="modal-body" class="text-sm text-gray-500">
                Modal content goes here.
              </p>
            </div>
          </div>
        </div>
      </div>
      <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
        <button
          type="button"
          class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-paletteColor1 text-base font-medium text-white hover:bg-paletteColor2 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-paletteColor2 sm:ml-3 sm:w-auto sm:text-sm"
          onclick="
          document.getElementById('modal').classList.add('hidden'); document.getElementById('modal').classList.remove('block');
          "
        >
          Close
        </button>
      </div>
    </div>
  </div>
</div>

<style>
  .animate-modal {
    animation: modal-grow 0.2s ease-in-out;
  }

  @keyframes modal-grow {
    0% {
      transform: scale(0.6);
    }
    100% {
      transform: scale(1);
    }
  }
</style>
