---
import CircleCheck from "../Icons/CircleCheck.astro";
import PriceModal, { type PriceModalProps } from "../Modals/PriceModal.astro";
interface Props {
  id: string;
  subTitle: string;
  price: number;
  type: string;
  description?: string;
  priceDescription?: string;
  priceDescription2?: string;
  packageName: string;
  buttonLabel?: string;
  bullets?: string[];
  packageDetails: PriceModalProps;
}

const {
  id,
  subTitle,
  price,
  description,
  packageName,
  bullets,
  type,
  buttonLabel = "Let's Get Started",
  priceDescription,
  priceDescription2,
  packageDetails,
} = Astro.props;
---

<div
  class={`w-full border border-gray-300 rounded-lg shadow-xl h-full flex flex-col`}
>
  <div class="bg-paletteColor1 text-white font-bold py-2 px-4 rounded-t-lg">
    {packageName}
  </div>
  <div class="bg-white rounded-lg overflow-hidden relative h-full">
    <div class="px-6 py-4 text-center h-full">
      <p class="text-paletteColor1 font-bold px-4 rounded">{subTitle}</p>
      <p class="text-gray-700 text-base py-3">{description}</p>
      <div class="font-bold text-4xl mb-2 relative">
        <span class="text-gray-500 text-sm">$</span>
        <span class="text-paletteColor1 text-5xl">{price}</span>
        {
          type === "monthly" && (
            <span class="text-gray-500 text-lg"> / month</span>
          )
        }
        <div class="text-gray-500 text-xs pt-2">
          {priceDescription}
        </div>
        {
          priceDescription2 && (
            <div class="text-gray-500 text-xs pt-2">{priceDescription2}</div>
          )
        }
      </div>
      <div class="py-2">
        <button
          id={`price-modal-toggle-${id}`}
          class="text-base inline-block bg-paletteColor4 hover:bg-paletteColor1 text-white font-bold py-2 px-4 rounded"
          >Price Breakdown</button
        >
      </div>
      {
        bullets ? (
          <ul class="text-gray-700 text-base py-3 list-inside text-left list-none">
            {bullets.map((bullet) => (
              <li class="flex items-center">
                <div class="pr-4">
                  <CircleCheck
                    width={"18"}
                    height={"18"}
                    fill="paletteColor2"
                  />
                </div>

                {bullet}
              </li>
            ))}
          </ul>
        ) : null
      }
    </div>
    <div class="px-6 py-4 bg-paletteColor1 text-center bottom-0 sticky">
      <a
        href="/contact"
        class="block text-white font-bold hover:text-paletteColor2 duration-300 py-2 px-4 rounded"
      >
        {buttonLabel}
        <span class="text-paletteColor2 pl-2">&rarr;</span>
      </a>
    </div>
  </div>
</div>

<PriceModal id={id} />

<script define:vars={{ id, packageName, subTitle, packageDetails }}>
document.addEventListener("astro:page-load", () => {
  const toggle = document.getElementById(`price-modal-toggle-${id}`);

  toggle?.addEventListener("click", () => {
    const modal = document.getElementById(`price-modal-${id}`);
    const modalTitle = document.getElementById(`price-modal-title-${id}`);
    const modalServiceDesc = document.getElementById(
      `price-modal-service-desc-${id}`
    );
    const modalTypeTitle = document.getElementById(
      `price-modal-type-title-${id}`
    );
    const modalTypeDesc = document.getElementById(
      `price-modal-type-desc-${id}`
    );
    const modalFees = document.getElementById(
      `price-modal-domain-hosting-fees-${id}`
    );
    const modalAddOns = document.getElementById(`price-modal-add-ons-${id}`);
    const modalAddOns2 = document.getElementById(
      `price-modal-add-ons-2-${id}`
    );
    const modalnote = document.getElementById(`price-modal-note-desc-${id}`);

    modal?.classList.add("block");
    modal?.classList.remove("hidden");

    if (modalTitle) {
      modalTitle.textContent = `${packageDetails.title}`;
    }
    if (modalServiceDesc) {
      modalServiceDesc.textContent = `${packageDetails.service}`;
    }
    if (modalTypeTitle) {
      modalTypeTitle.textContent = `${packageDetails.type}`;
    }
    if (modalTypeDesc) {
      modalTypeDesc.textContent = `${packageDetails.typeDesc}`;
    }
    if (modalFees) {
      modalFees.textContent = `${packageDetails.domainHostingFees}`;
    }
    if (modalAddOns) {
      modalAddOns.textContent = `${packageDetails.addOnServicesFees}`;
    }
    if (modalAddOns2) {
      modalAddOns2.textContent = `${packageDetails.addOnServicesFees2}`;
    }
    if (modalnote) {
      modalnote.textContent = `${packageDetails.noteDesc}`;
    }
  });
});
</script>
